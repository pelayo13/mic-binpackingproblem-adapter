openapi: 3.0.3
info:
  title: bpp-adapter API REST
  version: 1.0.0
  description: >
    ## Bin packing problem adapter API REST
servers:
  - url: http://localhost:8081
    description: Localhost
tags:
  - name: bppInstance
    description: Endpoint for BPP instance.
  - name: bppAlgorithmTest
    description: Endpoint for testing BPP algorithm.
paths:
  /api/v1/bpp-instances:
    post:
      tags:
        - BppInstance
      summary: CreateByFiles
      description: |-
        Create a bpp instance using the file provided, one bpp instance per file; that created instance is not persisted
      operationId: CreateByFiles
      parameters:
        - in: header
          name: Accept-Language
          description: Indicates the natural language and locale that the client prefers
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - files
              properties:
                files:
                  type: array
                  items:
                    type: string
                    format: binary
      responses:
        '200':
          description: Bin packing problem instances
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateByFilesResponse'
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestErrorResponse'
        '500':
          description: Unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestErrorResponse'
        default:
          description: Unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestErrorResponse'
  /api/v1/bpp-instances/solutions:
    post:
      tags:
        - BppInstance
      summary: CreateSolutionsByBppSolvableInstances
      description: |-
        Solve each instance and return the solution for it; that created solution is not persisted
      operationId: CreateSolutionsByBppSolvableInstances
      parameters:
        - in: query
          name: view
          description: Indicates the extra fields that have to be returned
          schema:
            type: string
            enum: [details]
        - in: header
          name: Accept-Language
          description: Indicates the natural language and locale that the client prefers
          schema:
            type: string
      requestBody:
        description: Bpp solvable instance, which contains the solving and local seach algorithms that will be applied to each instance
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSolutionsByBppSolvableInstancesRequest'
        required: true
      responses:
        '200':
          description: Bin packing problem solutions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateSolutionsByBppSolvableInstancesResponse'
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestErrorResponse'
        '500':
          description: Unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestErrorResponse'
        default:
          description: Unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestErrorResponse'
  /api/v1/bpp-algorithms/metrics-by-random-instances:
    post:
      tags:
        - BppAlgorithm
      summary: CreateMetricsByBppRandomInstances
      description: |-
        Obtain the metrics resulted by the execution of random algorithms; that created algorithm metrics are not persisted
      operationId: CreateMetricsByBppRandomInstances
      parameters:
        - in: header
          name: Accept-Language
          description: Indicates the natural language and locale that the client prefers
          schema:
            type: string
      requestBody:
        description: Contains the data needed for the generation of random instances and the return of metrics
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateMetricsByBppRandomInstancesRequest'
        required: true
      responses:
        '200':
          description: Bin packing problem metrics of the algorithm
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateMetricsByBppRandomInstancesResponse'
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestErrorResponse'
        '500':
          description: Unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestErrorResponse'
        default:
          description: Unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestErrorResponse'
  /api/v1/bpp-algorithms/metrics:
    post:
      tags:
        - BppAlgorithm
      summary: CreateMetricsByBppInstances
      description: |-
        Obtain the metrics resulted by the execution of algorithms; that created algorithm metrics are not persisted
      operationId: CreateMetricsByBppInstances
      parameters:
        - in: header
          name: Accept-Language
          description: Indicates the natural language and locale that the client prefers
          schema:
            type: string
      requestBody:
        description: Contains the list of instances and algorithms that will be tested and obtained their metrics
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateMetricsByBppInstancesRequest'
        required: true
      responses:
        '200':
          description: Bin packing problem metrics of the algorithm
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateMetricsByBppInstancesResponse'
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestErrorResponse'
        '500':
          description: Unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestErrorResponse'
        default:
          description: Unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestErrorResponse'
components:
  schemas:
    CreateMetricsByBppInstancesRequest:
      description: Request that contains the data needed to know the instances that have to be performed to be tested
      type: object
      required:
        - instances
        - algorithms
      properties:
        instances:
          type: array
          items:
            $ref: '#/components/schemas/BppInstanceDto'
        algorithms:
          type: array
          items:
            $ref: '#/components/schemas/BppAlgorithmDto'
        numberRepetitions:
          type: integer
          minimum: 1
    CreateMetricsByBppRandomInstancesRequest:
      description: Request that contains the data needed to know who to create the random instances
      type: object
      required:
        - binsCapacity
        - minItemsSize
        - maxItemsSize
        - minItemsDueDate
        - maxItemsDueDate
        - numberItems
        - numberRepetitions
        - algorithms
      properties:
        binsCapacity:
          type: integer
          minimum: 0
        minItemsSize:
          type: integer
          minimum: 0
        maxItemsSize:
          type: integer
          minimum: 0
        minItemsDueDate:
          type: integer
          minimum: 0
        maxItemsDueDate:
          type: integer
          minimum: 0
        numberItems:
          type: array
          items:
            type: integer
            minimum: 0
        numberRepetitions:
          type: integer
          minimum: 0
        algorithms:
          type: array
          items:
            $ref: '#/components/schemas/BppAlgorithmDto'
    CreateSolutionsByBppSolvableInstancesRequest:
      description: Request that contains the instances to be solved
      type: object
      required:
        - instances
      properties:
        instances:
          type: array
          items:
            $ref: '#/components/schemas/BppSolvableInstanceDto'
    CreateByFilesResponse:
      description: Response that contains the instances created using the files
      type: object
      required:
        - instances
        - filesWithErrors
      properties:
        instances:
          type: array
          items:
            $ref: '#/components/schemas/BppInstanceDto'
        filesWithErrors:
          type: array
          items:
            $ref: '#/components/schemas/CreateByFilesErrorResponse'
    CreateByFilesErrorResponse:
      description: Error response for each file that has not the correct format
      allOf:
        - $ref: '#/components/schemas/RestErrorResponse'
        - type: object
          required:
            - filename
          properties:
            filename:
              type: string
    CreateSolutionsByBppSolvableInstancesResponse:
      description: Response that contains the solution of each instance
      type: object
      required:
        - solutions
      properties:
        solutions:
          type: array
          items:
            $ref: '#/components/schemas/BppSolutionDto'
    CreateMetricsByBppRandomInstancesResponse:
      description: Response that contains the metrics of the random instances generated executed by the provided algorithms
      type: object
      required:
        - instancesMetrics
      properties:
        instancesMetrics:
          type: array
          items:
            $ref: '#/components/schemas/BppInstanceMetricsDto'
    CreateMetricsByBppInstancesResponse:
      description: Response that contains the metrics of the instances executed by the provided algorithms
      type: object
      required:
        - algorithmsMetrics
      properties:
        algorithmsMetrics:
          type: array
          items:
            $ref: '#/components/schemas/BppAlgorithmMetricsDto'
    RestErrorResponse:
      description: Default error
      type: object
      required:
        - code
        - title
        - detail
      properties:
        code:
          type: integer
        title:
          type: string
        detail:
          type: string
    BppBinDto:
      description: Bin where the items have to be stored
      type: object
      required:
        - items
      properties:
        items:
          description: Items that the bin has stored inside
          type: array
          items:
            $ref: '#/components/schemas/BppItemDto'
    BppItemDto:
      description: Item that has to be stored in a bin filling its capacity
      type: object
      required:
        - size
        - dueDate
      properties:
        size:
          type: integer
          minimum: 0
        dueDate:
          description: Moment in which the item has to be stored in one of the bins
          type: integer
          minimum: 0
    BppSolutionDto:
      description: Solution that contains the bins with all the items placed in each of them
      type: object
      required:
        - bins
      properties:
        bins:
          type: array
          items:
            $ref: '#/components/schemas/BppBinDto'
        details:
          $ref: '#/components/schemas/BppDetailsOfSolutionDto'
    BppDetailsOfSolutionDto:
      description: Extra details that the solution can contain, such as the steps that the solution went through
      type: object
      required:
        - recordInstances
      properties:
        recordInstances:
          type: array
          items:
            $ref: '#/components/schemas/BppInstanceDto'
    BppInstanceDto:
      description: The instance of the problem, its bins if it has, items and the capacity of the bins
      type: object
      required:
        - binsCapacity
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/BppItemDto'
        bins:
          type: array
          items:
            $ref: '#/components/schemas/BppBinDto'
        binsCapacity:
          type: integer
          minimum: 0
    BppSolvableInstanceDto:
      description: The instance that can be solved by itself because it contains the algorithm that will be used
      allOf:
        - $ref: '#/components/schemas/BppInstanceDto'
        - type: object
          properties:
            algorithm:
              description: Algorithm that will be used to solve the instance
              $ref: '#/components/schemas/BppAlgorithmDto'
    BppInstanceMetricsDto:
      description: Metrics of instance executed by each algorithm
      type: object
      required:
        - numberItems
        - algorithmsMetrics
      properties:
        numberItems:
          type: integer
          minimum: 0
        algorithmsMetrics:
          type: array
          items:
            $ref: '#/components/schemas/BppAlgorithmMetricsDto'
    BppAlgorithmMetricsDto:
      description: Metrics of each algorithm when executed for a instance
      type: object
      required:
        - algorithm
        - testCasesMetrics
      properties:
        averageNumberBins:
          type: number
          minimum: 0
        averageTardiness:
          type: number
          minimum: 0
        averageLateness:
          type: number
        averageMaximumLateness:
          type: number
        averageAvailableCapacity:
          type: number
          minimum: 0
        averageNumberIterations:
          type: number
          minimum: 0
        averageNumberNeighborsGenerated:
          type: number
          minimum: 0
        averageNumberEvaluatedNeighbors:
          type: number
          minimum: 0
        standardDeviationFitness:
          type: number
          minimum: 0
        averageFitness:
          type: number
          minimum: 0
        bestCaseByFitness:
          $ref: '#/components/schemas/BppTestCaseMetricsDto'
        averageSeconds:
          type: number
          minimum: 0
        algorithm:
          $ref: '#/components/schemas/BppAlgorithmDto'
        testCasesMetrics:
          type: array
          items:
            $ref: '#/components/schemas/BppTestCaseMetricsDto'
    BppTestCaseMetricsDto:
      description: Results for each test up to the total number of repetitions
      type: object
      properties:
        numberBins:
          type: integer
        averageTardinessStoredItems:
          type: number
        averageLatenessStoredItems:
          type: number
        maximumLateness:
          type: number
        availableCapacity:
          type: number
        numberIterations:
          type: number
        numberNeighborsGenerated:
          type: number
        numberEvaluatedNeighbors:
          type: number
        fitness:
          type: number
        evaluationFunctionResultsRecords:
          type: array
          items:
            type: number
        seconds:
          type: number
    BppAlgorithmDto:
      description: Algorithm to solve the instance
      type: object
      properties:
        greedyAlgorithmType:
          $ref: '#/components/schemas/GreedyAlgorithmTypeDto'
        localSearchAlgorithm:
          $ref: '#/components/schemas/LocalSearchAlgorithmDto'
    LocalSearchAlgorithmDto:
      description: Local search algorithm
      type: object
      required:
        - bppNeighborhoodStructures
        - bppStrategyControl
        - bppEvaluationFunction
        - bppStopCriteria
      properties:
        bppNeighborhoodStructures:
          type: array
          items:
            $ref: '#/components/schemas/BppNeighborhoodStructureDto'
        bppStrategyControl:
          $ref: '#/components/schemas/BppStrategyControlDto'
        bppEvaluationFunction:
          $ref: '#/components/schemas/BppEvaluationFunctionDto'
        bppStopCriteria:
          $ref: '#/components/schemas/BppStoppingCriteriaDto'
    BppNeighborhoodStructureDto:
      description: Neighborhood structure that generate the neighbors using a base solution
      type: object
      required:
        - bppNeighborhoodStructureOperations
      properties:
        bppNeighborhoodStructureOperations:
          type: array
          items:
            anyOf:
              - $ref: '#/components/schemas/BppBinsDestructionOperationDto'
              - $ref: '#/components/schemas/BppReconstructionOperationDto'
              - $ref: '#/components/schemas/BppStoredItemsAndFreeItemsInterchangeOperationDto'
              - $ref: '#/components/schemas/BppStoredItemsInterchangeOperationDto'
    BppNeighborhoodStructureOperationDto:
      description: Operation applied to a instance so we can generate neighbors
      type: object
      required:
        - type
      properties:
        type:
          $ref: '#/components/schemas/BppNeighborhoodStructureOperationTypeDto'
    BppBinsDestructionOperationDto:
      description: Operation that destroys a number of bins based on a selection function
      allOf:
        - $ref: '#/components/schemas/BppNeighborhoodStructureOperationDto'
        - type: object
          properties:
            numberToDestroy:
              type: number
              minimum: 1
            binsSelectionFunction:
              description: Indicates how the bins that are going to be destroyed are selected
              $ref: '#/components/schemas/BppBinsSelectionFunctionDto'
    BppReconstructionOperationDto:
      description: Operation that solves a not solved instance
      allOf:
        - $ref: '#/components/schemas/BppNeighborhoodStructureOperationDto'
        - type: object
          properties:
            algorithm:
              $ref: '#/components/schemas/GreedyAlgorithmTypeDto'
    BppStoredItemsAndFreeItemsInterchangeOperationDto:
      description: Operation that interchange the non stored items with each stored items of each of the bins
      allOf:
        - $ref: '#/components/schemas/BppNeighborhoodStructureOperationDto'
        - type: object
          properties:
            numberItemsToInterchangeFrom:
              description: Number of not stored items that are going to be interchanged
              type: number
              minimum: 1
            numberItemsToInterchangeTo:
              description: Number of stored items that are going to be interchanged
              type: number
              minimum: 1
            itemsInterchangeFunction:
              description: Function that returns if the items should be interchanged
              $ref: '#/components/schemas/BppItemsInterchangeFunctionDto'
    BppStoredItemsInterchangeOperationDto:
      description: Operation for interchanging stored items of two different bins
      allOf:
        - $ref: '#/components/schemas/BppNeighborhoodStructureOperationDto'
        - type: object
          properties:
            numberItemsToInterchangeFrom:
              description: Number of items that are going to be interchange of the first bin
              type: number
              minimum: 1
            numberItemsToInterchangeTo:
              description: Number of items that are going to be interchange of the second bin
              type: number
              minimum: 1
            itemsInterchangeFunction:
              description: Function that returns if the items should be interchanged
              $ref: '#/components/schemas/BppItemsInterchangeFunctionDto'
    BppStoppingCriteriaDto:
      description: Indicates the conditions needed for the local search algorithm to stop
      type: object
      required:
        - maxNumberIterations
      properties:
        maxNumberIterations:
          type: number
          minimum: 1
    BppNeighborhoodStructureOperationTypeDto:
      description: Possible operations that can be applied to conform a neighborhood structure
      type: string
      enum:
        - BINS_DESTRUCTION
        - RECONSTRUCTION
        - BINS_INTERCHANGE
        - STORED_ITEMS_AND_FREE_ITEMS_INTERCHANGE
        - STORED_ITEMS_INTERCHANGE
    BppBinsSelectionFunctionDto:
      description: Function for selecting a number of bins based on different of their fields
      type: string
      enum:
        - SMALLEST_OCCUPIED_CAPACITY
        - BIGGEST_MAXIMUM_LATENESS
    BppItemsInterchangeFunctionDto:
      description: Function that given two groups of items returns if they can be interchanged
      type: string
      enum:
        - SIZE
        - ALWAYS
    BppStrategyControlDto:
      description: Algorithm that selected the new solution among the generated neighbors
      type: string
      enum:
        - HILL_CLIMBING
        - GRADIENT_DESCENT
    BppEvaluationFunctionDto:
      description: Function that returns a number which determines the goodness the of solution based on its metrics
      type: string
      enum:
        - BINS_NUMBER
        - TARDINESS
        - LATENESS
        - MAXIMUM_LATENESS
        - AVAILABLE_CAPACITY
        - FITNESS
    GreedyAlgorithmTypeDto:
      description: Types of greedy algorithms that can be used for solving an instance
      type: string
      enum:
        - RANDOM
        - FIRST_FIT_DECREASING
        - BEST_FIT_DECREASING